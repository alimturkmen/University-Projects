Object subclass: #DotA	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!!DotA commentStamp: 'alim 5/20/2017 21:41' prior: 0!The main class of the game!DotA subclass: #GameArena	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!!GameArena commentStamp: 'alim 5/20/2017 21:43' prior: 0!The platform that the game is played on!!GameArena methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:43'!"Chooses a character from the Sentinel List"chooseChar2|choice2 sentinels char |sentinels := #('EarthShaker' 'Magina' 'Mirana' 'Ogre Magi' 'Rylai' 'Sven').choice2 := UIManager default chooseFrom:sentinels message: 'Choose a hero from Sentinel list for Player 2'.choice2 = 1ifTrue: [ char := Earthshaker new.]ifFalse: [choice2 =2ifTrue: [ char := Magina new.]ifFalse: [choice2 =3ifTrue: [ char := Mirana new.]ifFalse: [choice2 =4ifTrue: [ char := OgreMagi new. ]ifFalse: [choice2 =5ifTrue: [ char := Rylai new.]ifFalse: [ char := Sven new.]]]]].^char.			! !!GameArena methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:44'!"Chooses items for the players" chooseItems:player1 and:player2|itemlist item chosenitem ishptaken ismptaken itemslotsize costlist|itemlist := LinkedList new.costlist := LinkedList new.itemslotsize := 0.ishptaken := 0.ismptaken := 0.itemlist add:'Battle Fury'; add:'Butterfly'; add: 'Daedalus'; add: 'Desolator'; add: 'Energy Booster'; add: 'Health Potion'; add: 'Heart of Tarrasque'; add: 'Hood of Defiance'; add: 'Mana Potion'; add: 'Vanguard'; add: 'Vitaly Booster'.costlist add:4500; add:5500;add:5500;add:4000;add:1100;add:200;add:5600;add:2000;add:200;add:2500;add:1200.[(itemlist size) > 0]whileTrue: [	chosenitem := UIManager default chooseFrom: itemlist message:('Choose an item for Player1 (remaining item slot=', ((4-itemslotsize) asString), ', remaining gold=', ((player1 getGold) asString ), ')').	(itemlist at:chosenitem) = 'Battle Fury'	ifTrue: [item := BattleFury new. 				player1 setDamage: ((player1 getDamage1) + 55) to:((player1 getDamage2)+55).				]	ifFalse: [ (itemlist at:chosenitem) = 'Butterfly'		ifTrue: [ item:= Butterfly new. 				player1 setDamage: ((player1 getDamage1) + 30) to:((player1 getDamage2)+30).]			ifFalse: [ (itemlist at:chosenitem) = 'Daedalus'				ifTrue: [ item:= Daedalus new.							player1 setDamage: ((player1 getDamage1) + 75) to:((player1 getDamage2)+75).]					ifFalse: [(itemlist at:chosenitem) = 'Desolator'						ifTrue: [item:= Desolator new.							player1 setDamage: ((player1 getDamage1) + 50) to:((player1 getDamage2)+50).							player2 setArmor: (player2 getArmor ) - 5]						ifFalse: [(itemlist at:chosenitem) = 'Energy Booster'							ifTrue: [item:= EnergyBooster new.										player1 setMaxMana: (player1 getMaxMana)+250.										player1 setMana: player1 getMaxMana .]							ifFalse: [(itemlist at:chosenitem) = 'Health Potion'								ifTrue:[item:= HealthPotion new.									(ishptaken = 1)									ifTrue: [itemslotsize := (itemslotsize-1). ishptaken:=0]									ifFalse: [ ishptaken := 1 ].									]								ifFalse: [ (itemlist at:chosenitem) = 'Heart of Tarrasque'									ifTrue: [ item:= HeartofTarrasque new.										player1 setMaxHp: (player1 getMaxHp) +250.										player1 setHp: (player1 getMaxHp ) ]									ifFalse:[ (itemlist at:chosenitem) = 'Hood of Defiance'										ifTrue:[item := HoodofDefiance new ]										ifFalse: [(itemlist at:chosenitem) = 'Mana Potion'											ifTrue: [item:= ManaPotion new.												(ismptaken = 1)												ifTrue: [itemslotsize := (itemslotsize-1). ismptaken:=0]												ifFalse: [ ismptaken := 1 ].]												ifFalse: [(itemlist at:chosenitem) = 'Vanguard'													ifTrue: [item:= Vanguard new.														player1 setMaxHp: (player1 getMaxHp) +250.														player1 setHp: (player1 getMaxHp )]													ifFalse: [ item:= VitalyBooster new.																player1 setMaxHp: (player1 getMaxHp)+250.																player1 setHp: player1 getMaxHp ].].].].].].].].].].				player1 setItemList: item.				player1 setGold: (player1 getGold - item getCost ).				itemslotsize := itemslotsize + 1.								(itemlist size) to: (1) by:-1 do: [ :x| (costlist at:x) > (player1 getGold)															ifTrue: [ itemlist remove:(itemlist at:x). 																			costlist remove:(costlist at:x).] ].				itemslotsize = 4				ifTrue: [ itemlist removeAll. costlist removeAll.					ishptaken = 1					ifTrue: [itemlist add:'Health Potion'. costlist add:200].					ismptaken = 1					ifTrue: [itemlist add:'Mana Potion'. costlist add:200]]				].	itemlist removeAll.itemlist add:'Battle Fury'; add:'Butterfly'; add: 'Daedalus'; add: 'Desolator'; add: 'Energy Booster'; add: 'Health Potion'; add: 'Heart of Tarrasque'; add: 'Hood of Defiance'; add: 'Mana Potion'; add: 'Vanguard'; add: 'Vitaly Booster'.itemslotsize := 0.ishptaken := 0.ismptaken := 0.costlist removeAll.costlist add:4500; add:5500;add:5500;add:4000;add:1100;add:200;add:5600;add:2000;add:200;add:2500;add:1200.[(itemlist size) > 0]whileTrue: [	chosenitem := UIManager default chooseFrom: itemlist message:('Choose an item for Player2 (remaining item slot=', ((4-itemslotsize) asString), ', remaining gold=', ((player2 getGold) asString ), ')').	(itemlist at:chosenitem) = 'Battle Fury'	ifTrue: [item := BattleFury new. 				player2 setDamage: ((player2 getDamage1) + 55) to:((player2 getDamage2)+55).				]	ifFalse: [ (itemlist at:chosenitem) = 'Butterfly'		ifTrue: [ item:= Butterfly new.			player2 setDamage: ((player2 getDamage1) + 30) to:((player2 getDamage2)+30). ]			ifFalse: [ (itemlist at:chosenitem) = 'Daedalus'				ifTrue: [ item:= Daedalus new.					player2 setDamage: ((player2 getDamage1) + 75) to:((player2 getDamage2)+75).	]					ifFalse: [(itemlist at:chosenitem) = 'Desolator'						ifTrue: [item:= Desolator new.							player2 setDamage: ((player2 getDamage1) + 50) to:((player2 getDamage2)+50).							player1 setArmor: (player1 getArmor ) - 5]						ifFalse: [(itemlist at:chosenitem) = 'Energy Booster'							ifTrue: [item:= EnergyBooster new.										player2 setMaxMana: (player2 getMaxMana)+250.										player2 setMana: player2 getMaxMana .]							ifFalse: [(itemlist at:chosenitem) = 'Health Potion'								ifTrue:[item:= HealthPotion new.									(ishptaken = 1)									ifTrue: [itemslotsize := (itemslotsize-1). ishptaken:=0]									ifFalse: [ ishptaken := 1 ].									]								ifFalse: [ (itemlist at:chosenitem) = 'Heart of Tarrasque'									ifTrue: [ item:= HeartofTarrasque new.												player2 setMaxHp: (player2 getMaxHp) +250.												player2 setHp: (player2 getMaxHp ) ]									ifFalse:[ (itemlist at:chosenitem) = 'Hood of Defiance'										ifTrue:[item := HoodofDefiance new ]										ifFalse: [(itemlist at:chosenitem) = 'Mana Potion'											ifTrue: [item:= ManaPotion new.												(ismptaken = 1)												ifTrue: [itemslotsize := (itemslotsize-1).]												ifFalse: [ ismptaken := 1 ]. ismptaken:=0]												ifFalse: [(itemlist at:chosenitem) = 'Vanguard'													ifTrue: [item:= Vanguard new.														player2 setMaxHp: (player2 getMaxHp) +250.														player2 setHp: (player2 getMaxHp )]													ifFalse: [ item:= VitalyBooster new.																	player2 setMaxHp: (player2 getMaxHp)+250.																	player2 setHp: player2 getMaxHp ].].].].].].].].].].				player2 setItemList: item.				player2 setGold: (player2 getGold - item getCost ).				itemslotsize := itemslotsize + 1.								(itemlist size) to: (1) by:-1 do: [ :x| (costlist at:x) > (player2 getGold)															ifTrue: [ itemlist remove:(itemlist at:x). 																			costlist remove:(costlist at:x).] ].				itemslotsize = 4				ifTrue: [ itemlist removeAll. costlist removeAll.					ishptaken = 1					ifTrue: [itemlist add:'Health Potion'. costlist add:200].					ismptaken = 1					ifTrue: [itemlist add:'Mana Potion'. costlist add:200]]				].				! !!GameArena methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:43'!"Chooses a character from the Scourge List"chooseChar1|choice1 scourges char |scourges := #('Leshrac' 'Lion' 'Mortred' 'Nyx Assasin' 'Skeleton King' 'TideHunter').choice1 := UIManager default chooseFrom:scourges message: 'Choose a hero from Scourge list for Player 1'.choice1 = 1ifTrue: [  char:= Leshrac new.]ifFalse: [choice1 =2ifTrue: [ char:= Lion new.]ifFalse: [ choice1 =3ifTrue: [ char:= Mortred new.]ifFalse: [choice1 =4ifTrue: [ char:= NyxAssasin new. ]ifFalse: [choice1 =5ifTrue: [ char:= SkeletonKing  new.]ifFalse: [ char:= Tidehunter  new.]]]]].^char.			! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameArena class	instanceVariableNames: ''!!GameArena class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:10'!start|player1 player2  turn hpcounter1 mpcounter1 hpcounter2 mpcounter2 action1 action2 tempObject|tempObject := self basicNew.turn := 0. "represents the turn of players. if it is 0 that means it is player1's turn and it is player2's turn for turn=1"hpcounter1 :=0. "counts the number of health potions of player1"mpcounter1 :=0. "counts the number of mana potions of player1"hpcounter2 := 0. "counts the number of health potions of player2"mpcounter2 := 0. "counts the number of mana potions of player2""chooses heroes of player1 and player2"player1 := tempObject chooseChar1.player2 := tempObject chooseChar2."chooses items for player1 and player2"tempObject chooseItems:player1 and:player2."Creates the actionlist of player1"			player1 addAction: 'Attack'.			1 to:(player1 getItemList size) do: [ :x| ((player1 getItemList at:x) getName = 'Health Potion')				ifTrue: [ hpcounter1 := hpcounter1 +1 ].				((player1 getItemList at:x) getName = 'Mana Potion')				ifTrue: [ mpcounter1 := mpcounter1 +1 ]].			hpcounter1 > 0			ifTrue: [ player1 addAction: 'Use Health Potion' ].			mpcounter1 > 0			ifTrue: [ player1 addAction: 'Use Mana Potion' ].			(player1 getSkill1) isActive = 1			ifTrue: [ player1 addAction: (player1 getSkill1 getName ) ].			(player1 getSkill2) isActive = 1			ifTrue: [player1 addAction: (player1 getSkill2 getName ) ]."Creates action list of player2"						player2 addAction: 'Attack'.			1 to:(player2 getItemList size) do: [ :x| ((player2 getItemList at:x) getName = 'Health Potion')				ifTrue: [ hpcounter2 := hpcounter2 +1 ].				((player2 getItemList at:x) getName = 'Mana Potion')				ifTrue: [ mpcounter2 := mpcounter2 +1 ]].			hpcounter2 > 0			ifTrue: [ player2 addAction: 'Use Health Potion' ].			mpcounter2 > 0			ifTrue: [ player2 addAction: 'Use Mana Potion' ].			(player2 getSkill1) isActive = 1			ifTrue: [ player2 addAction: (player2 getSkill1 getName ) ].			(player2 getSkill2) isActive = 1			ifTrue: [player2 addAction: (player2 getSkill2 getName ) ].						Transcript open.			Transcript clear."Main loop of the game"			[((player1 getHp) > 0) & ((player2 getHp) > 0)]			whileTrue: [ turn = 0				ifTrue: [ Transcript show: 'Player1s turn'; cr. 					((player1 getSkill1 getManaUsage)>(player1 getMana))					ifTrue: [ 						player1 getActionList remove: (player1 getSkill1 getName) ifAbsent:0 ]					ifFalse: [(player1 getActionList includes:(player1 getSkill1 getName))						ifFalse: [player1 addAction:(player1 getSkill1 getName)]].					((player1 getSkill2 getManaUsage )>(player1 getMana))					ifTrue: [ player1 getActionList remove: (player1 getSkill2 getName) ifAbsent:0 ]					ifFalse: [(player1 getActionList includes:(player1 getSkill2 getName))						ifFalse: [player1 addAction:(player1 getSkill2 getName)]].					action1 := UIManager default chooseFrom: (player1 getActionList) message: ('Player1 turn (', (player1 getName), ' )' ).					(player1 getActionList at:action1) = 'Attack'					ifTrue: [ player2 setHp:((player2 getHp)-(player1 CalculateDamage:(player1 getDamage) armor:(player2 getArmor))).					player1 LastAction: 'Attack'].					((player1 getActionList at:action1) = (player1 getSkill1 getName))					ifTrue: [ player2 setHp:((player2 getHp)-(player1 CalculateDamage:(player1 getSkill1 getPureDamage) armor:(player2 getArmor))). 					player1 LastAction: (player1 getSkill1 getName).					player1 setMana: (player1 getMana)-(player1 getSkill1 getManaUsage )].				((player1 getActionList at:action1) = (player1 getSkill2 getName))					ifTrue: [ player2 setHp:((player2 getHp)-(player1 CalculateDamage:(player1 getSkill2 getPureDamage) armor:(player2 getArmor))). 					player1 LastAction: (player1 getSkill2 getName).					player1 setMana: (player1 getMana)-(player1 getSkill2 getManaUsage )].					((player1 getActionList at:action1) = 'Use Health Potion')					ifTrue: [ player1 LastAction: 'Health Potion'.										player1 getHp > (player1 getMaxHp-300 )								ifTrue: [player1 setHp: player1 getMaxHp ]								ifFalse: [player1 setHp: (player1 getHp)+300].														hpcounter1 := hpcounter1-1.							hpcounter1 < 1							ifTrue: [player1 removeAction: 'Use Health Potion'].							].					((player1 getActionList at:action1) = 'Use Mana Potion')					ifTrue: [ player1 LastAction: 'Mana Potion'.										player1 getMana > (player1 getMaxMana-300) 								ifTrue: [player1 setMana: player1 getMaxMana ]								ifFalse: [player1 setMana: (player1 getMana)+300].														mpcounter1 := mpcounter1-1.							mpcounter1 < 1							ifTrue: [player1 removeAction: 'Use Mana Potion']].					turn :=1.															]					ifFalse: [ Transcript show: 'Player2s turn'; cr.					((player2 getSkill1 getManaUsage)>(player2 getMana))					ifTrue: [player2 getActionList remove:(player2 getSkill1 getName) ifAbsent:0 ]					.					((player2 getSkill2 getManaUsage )>(player2 getMana))					ifTrue: [ player2 getActionList remove: (player2 getSkill2 getName) ifAbsent:0 ]					.					action2 := UIManager default chooseFrom: (player2 getActionList) message: ('Player2 turn (', (player2 getName), ' )' ).					(player2 getActionList at:action2) = 'Attack'					ifTrue: [ player1 setHp:((player1 getHp)-(player2 CalculateDamage:(player2 getDamage) armor:(player1 getArmor))).					player2 LastAction: 'Attack'].					((player2 getActionList at:action2) = (player2 getSkill1 getName))					ifTrue: [ player1 setHp:((player1 getHp)-(player2 CalculateDamage:(player2 getSkill1 getPureDamage) armor:(player1 getArmor))). 					player2 LastAction: (player2 getSkill1 getName).					player2 setMana: (player2 getMana)-(player2 getSkill1 getManaUsage )].					((player2 getActionList at:action2) = (player2 getSkill2 getName))					ifTrue: [ player1 setHp:((player1 getHp)-(player2 CalculateDamage:(player2 getSkill2 getPureDamage) armor:(player1 getArmor))). 					player2 LastAction: (player2 getSkill2 getName).					player2 setMana: (player2 getMana)-(player2 getSkill2 getManaUsage )].					((player2 getActionList at:action2) = 'Use Health Potion')					ifTrue: [ player2 LastAction: 'Health Potion'.										player2 getHp > (player2 getMaxHp-300 )								ifTrue: [player2 setHp: player2 getMaxHp ]								ifFalse: [player2 setHp: (player2 getHp)+300].							hpcounter2 := hpcounter2-1.							hpcounter2 < 1							ifTrue: [player2 removeAction: 'Use Health Potion'].							].					((player2 getActionList at:action2) = 'Use Mana Potion')					ifTrue: [ player2 LastAction: 'Mana Potion'.										player2 getMana > (player2 getMaxMana-300) 								ifTrue: [player2 setMana: player2 getMaxMana ]								ifFalse: [player2 setMana: (player2 getMana)+300].							mpcounter2 := mpcounter2-1.							mpcounter2 < 1							ifTrue: [player2 removeAction: 'Use Mana Potion']].					turn := 0.										].				Transcript show: ('Player1'); cr;				show: ('Hero: ', player1 getName); cr;				show: ((player1 getHp asString ), ' / ', (player1 getMaxHp asString ), ' HP'); cr;				show: ((player1 getMana asString ), ' / ', (player1 getMaxMana asString ), ' Mana'); cr;				show: 'Last Action: ', (player1 getLastAction asString ); cr;				show: 'Remaining Potions: '.				hpcounter1 > 0				ifTrue: [ Transcript show: 'Health Potion x',(hpcounter1 asString ),'  '  ].				mpcounter1 > 0				ifTrue: [ Transcript show: 'Mana Potion x', (mpcounter1 asString), '  ' ].				Transcript cr;				show: 'Skills in Cooldown: '. 				Transcript cr; cr; cr;								show: ('Player2'); cr;				show: ('Hero: ', player2 getName); cr;				show: ((player2 getHp asString ), ' / ', (player2 getMaxHp asString ), ' HP'); cr;				show: ((player2 getMana asString ), ' / ', (player2 getMaxMana asString ), ' Mana'); cr;				show: 'Last Action: ', (player2 getLastAction asString ); cr;				show: 'Remaining Potions: '.				hpcounter2 > 0				ifTrue: [ Transcript show: 'Health Potion x',(hpcounter2 asString ), '  '  ].				mpcounter2 > 0				ifTrue: [ Transcript show: 'Mana Potion x', (mpcounter2 asString), '  aa' ].				Transcript cr;				show: 'Skills in Cooldown: '. 				Transcript cr; cr; cr.									].			player1 getHp > 0		ifTrue: [ Transcript show: 'The winner is Player1 ' ]		ifFalse: [ Transcript show: 'The winner is Player2 ' ].! !DotA subclass: #Hero	instanceVariableNames: 'Hp Mana Skill1 Skill2 Armor Damage1 Damage2 LastAction MaxHp MaxMana ActionList Gold ItemList Name'	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!!Hero commentStamp: 'alim 5/20/2017 21:44' prior: 0!The parent class of the all heroes.!!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:02'!"Sets the name of a hero"setName: nameName:= name.! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:50'!"Sets the armor of the hero"setArmor: newArmorArmor := newArmor! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:49'!"Returns the remaining mana of the hero"getMana^Mana! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:51'!"Sets the minimum and the maximum damage"setDamage:damage1 to:damage2Damage1 := damage1.Damage2 := damage2.! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:48'!"Returns the last action that is made"getLastAction^LastAction ! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:45'!"Calculates actual damage by using given damage and enemy armor"CalculateDamage:damage armor:EnemyArmor^ ((damage*(1 - ((0.06*EnemyArmor )/(1+(0.06*EnemyArmor ))))) asInteger)! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:51'!"Adds a new item to the item list that a hero has"setItemList: newItemItemList := ItemList ,{(newItem )}.! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:50'!"Returns the second skill of the hero"getSkill2^Skill2! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:46'!"Adds action to actionlist"addAction: actionActionList add:action.! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:52'!"Sets the remaining mana"setMana: manaMana := mana! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:49'!"Returns the first skill of the hero"getSkill1^Skill1! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:02'!"Sets the first skill of a hero"setSkill1: skillSkill1 := skill! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:52'!"Sets the remaining gold of a hero"setGold: goldGold := gold! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:46'!"Creates an empty itemlist"createInitialItemListItemList := #().! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:46'!"Returns the list of the all actions"getActionList^ActionList! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:45'!"Returns the last action that is made"LastAction: actionLastAction := action! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:48'!"Returns the gold that hero has"getGold^Gold! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:49'!"Returns the name of the hero"getName^Name! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:46'!"Creates an empty actionlist"createInitialActionListActionList  := LinkedList new.! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:48'!"Returns the itemlist"getItemList^ItemList .! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:02'!"Sets the second skill of a hero"setSkill2: skillSkill2 :=skill! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:47'!"Returns the value of armor of the hero"getArmor^Armor! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:49'!"Returns the maximum health point of the hero"getMaxHp^MaxHp ! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:50'!"Removes an action from the action list"removeAction: actionActionList remove:action.! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:01'!"Sets the initial health point that a hero has"setMaxHp: maxHpMaxHp := maxHp! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:47'!"Returns the minimum damage"getDamage1^Damage1! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:01'!"Sets the initial mana of a hero"setMaxMana: maxManaMaxMana := maxMana! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:47'!"Returns the maximum damage"getDamage2^Damage2! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:52'!"Sets the remaining health point of a hero"setHp: hpHp := hp! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:49'!"Returns the maximum mana that a hero has"getMaxMana^MaxMana ! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:48'!"Returns the health point of the hero"getHp^Hp ! !!Hero methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 21:47'!"Returns a damage from interval of minimum and maximum damage"getDamage|rand|.rand := Random new.rand := (Damage2 - Damage1)*(rand next).^(Damage1+rand) asInteger.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Hero class	instanceVariableNames: ''!!Hero class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:01'!new ^self subclassResponsibility.! !DotA subclass: #Item	instanceVariableNames: 'Cost Name'	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!!Item commentStamp: 'alim 5/20/2017 22:03' prior: 0!The parent class of the items!!Item methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:03'!"Sets the name of an item"setName: nameName:= name.! !!Item methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:03'!"Returns the cost of an item"getCost^Cost! !!Item methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:03'!"Sets the cost of an item"setCost: goldCost := gold! !!Item methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:03'!"Returns the name of an item"getName^Name! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Item class	instanceVariableNames: ''!!Item class methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/28/2017 22:27'!new^self subclassResponsibility ! !Item subclass: #BattleFury	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BattleFury class	instanceVariableNames: ''!!BattleFury class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 14:59'!new|tempObject|tempObject := self basicNew.tempObject setCost:4500.tempObject setName: 'Battle Fury'.^tempObject.! !Item subclass: #Butterfly	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Butterfly class	instanceVariableNames: ''!!Butterfly class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 14:59'!new|tempObject|tempObject := self basicNew.tempObject setCost:5500.tempObject setName: 'Butterfly'.^tempObject.! !Item subclass: #Daedalus	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Daedalus class	instanceVariableNames: ''!!Daedalus class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:00'!new|tempObject|tempObject := self basicNew.tempObject setCost:5500.tempObject setName: 'Daedalus'.^tempObject.! !Item subclass: #Desolator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Desolator class	instanceVariableNames: ''!!Desolator class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:00'!new|tempObject|tempObject := self basicNew.tempObject setCost:4000.tempObject setName: 'Desolator'.^tempObject.! !Item subclass: #EnergyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EnergyBooster class	instanceVariableNames: ''!!EnergyBooster class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:00'!new|tempObject|tempObject := self basicNew.tempObject setCost:1100.tempObject setName: 'Energy Booster'.^tempObject.! !Item subclass: #HealthPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HealthPotion class	instanceVariableNames: ''!!HealthPotion class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:00'!new|tempObject|tempObject := self basicNew.tempObject setCost:200.tempObject setName: 'Health Potion'.^tempObject.! !Item subclass: #HeartofTarrasque	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HeartofTarrasque class	instanceVariableNames: ''!!HeartofTarrasque class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:00'!new|tempObject|tempObject := self basicNew.tempObject setCost:5600.tempObject setName: 'Heart of Tarrasque'.^tempObject.! !Item subclass: #HoodofDefiance	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HoodofDefiance class	instanceVariableNames: ''!!HoodofDefiance class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:00'!new|tempObject|tempObject := self basicNew.tempObject setCost:2000.tempObject setName: 'Hood of Defiance'.^tempObject.! !Item subclass: #ManaPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaPotion class	instanceVariableNames: ''!!ManaPotion class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:01'!new|tempObject|tempObject := self basicNew.tempObject setCost:200.tempObject setName: 'Mana Potion'.^tempObject.! !Hero subclass: #Scourge	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Scourge class	instanceVariableNames: ''!!Scourge class methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/28/2017 20:03'!new ^self subclassResponsibility.! !Scourge subclass: #Leshrac	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Leshrac class	instanceVariableNames: ''!!Leshrac class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:59'!new|tempObject|tempObject := self basicNew.tempObject setHp: 1518.tempObject setMaxHp: 1518.tempObject setMana: 1534.tempObject setMaxMana: 1534.tempObject setSkill1: SplitEarth new.tempObject setSkill2: PulseNova new.tempObject setArmor: 12.tempObject setDamage: 133 to: 137. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Leshrac'.^tempObject ! !Scourge subclass: #Lion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Lion class	instanceVariableNames: ''!!Lion class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:59'!new|tempObject|tempObject := self basicNew.tempObject setHp: 1609.tempObject setMaxHp: 1609.tempObject setMana: 1456.tempObject setMaxMana: 1456.tempObject setSkill1: EarthSpike new.tempObject setSkill2: FingerofDeath new.tempObject setArmor: 9.tempObject setDamage: 139 to: 145. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Lion'.^tempObject ! !Scourge subclass: #Mortred	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mortred class	instanceVariableNames: ''!!Mortred class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:59'!new|tempObject|tempObject := self basicNew.tempObject setHp: 1754.tempObject setMaxHp: 1754.tempObject setMana: 892.tempObject setMaxMana: 892.tempObject setSkill1: Blur new.tempObject setSkill2: CoupdeGrace new.tempObject setArmor: 18.tempObject setDamage: 142 to: 144. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Mortred'.^tempObject ! !Scourge subclass: #NyxAssasin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NyxAssasin class	instanceVariableNames: ''!!NyxAssasin class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:59'!new|tempObject|tempObject := self basicNew.tempObject setHp: 1784.tempObject setMaxHp: 1784.tempObject setMana: 1149.tempObject setMaxMana: 1149.tempObject setSkill1: Impale new.tempObject setSkill2: ManaBurn new.tempObject setArmor: 14.tempObject setDamage: 122 to: 126. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Nyx Assasin'.^tempObject ! !Hero subclass: #Sentinel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!Sentinel subclass: #Earthshaker	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Earthshaker class	instanceVariableNames: ''!!Earthshaker class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:00'!new|tempObject|tempObject := self basicNew.tempObject setHp: 2270.tempObject setMaxHp: 2270.tempObject setMana: 1030.tempObject setMaxMana: 1030.tempObject setSkill1: Fissure new.tempObject setSkill2: EnchantTotem new.tempObject setArmor: 10.tempObject setDamage: 136 to: 146. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Earthshaker'.^tempObject ! !Sentinel subclass: #Magina	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Magina class	instanceVariableNames: ''!!Magina class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:00'!new|tempObject|tempObject := self basicNew.tempObject setHp: 1495.tempObject setMaxHp: 1495.tempObject setMana: 1017.tempObject setMaxMana: 1017.tempObject setSkill1: ManaBreak new.tempObject setSkill2: ManaVoid new.tempObject setArmor: 14.tempObject setDamage: 136 to: 140. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Magina'.^tempObject ! !Sentinel subclass: #Mirana	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mirana class	instanceVariableNames: ''!!Mirana class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:00'!new|tempObject|tempObject := self basicNew.tempObject setHp: 1697.tempObject setMaxHp: 1697.tempObject setMana: 996.tempObject setMaxMana: 996.tempObject setSkill1: Starstorm new.tempObject setSkill2: SacredArrow new.tempObject setArmor: 16.tempObject setDamage: 137 to: 148. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Mirana'.^tempObject ! !Sentinel subclass: #OgreMagi	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!OgreMagi class	instanceVariableNames: ''!!OgreMagi class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:00'!new|tempObject|tempObject := self basicNew.tempObject setHp: 2426.tempObject setMaxHp: 2426.tempObject setMana: 1105.tempObject setMaxMana: 1105.tempObject setSkill1: Fireblast new.tempObject setSkill2: Multicast new.tempObject setArmor: 16.tempObject setDamage: 126 to: 132. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Ogre Magi'.^tempObject ! !Sentinel subclass: #Rylai	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Rylai class	instanceVariableNames: ''!!Rylai class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:01'!new|tempObject|tempObject := self basicNew.tempObject setHp: 1609.tempObject setMaxHp: 1609.tempObject setMana: 1373.tempObject setMaxMana: 1373.tempObject setSkill1: FrostBite new.tempObject setSkill2: FreezingField new.tempObject setArmor: 9.tempObject setDamage: 125 to: 131. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Rylai'.^tempObject ! !Scourge subclass: #SkeletonKing	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SkeletonKing class	instanceVariableNames: ''!!SkeletonKing class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:00'!new|tempObject|tempObject := self basicNew.tempObject setHp: 2270.tempObject setMaxHp: 2270.tempObject setMana: 893.tempObject setMaxMana: 893.tempObject setSkill1: WraithfireBlast new.tempObject setSkill2: VampiricAura new.tempObject setArmor: 11.tempObject setDamage: 151 to: 153. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Skeleton King'.^tempObject ! !DotA subclass: #Skill	instanceVariableNames: 'Name Type PureDamage Cooldown ManaUsage'	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:05'!"Returns how much mana a skill uses"getManaUsage^ManaUsage ! !!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:06'!"Sets the name of skill"setName: nmName := nm.! !!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:05'!"Returns the name of a skill"getName^Name! !!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:04'!"Sets the damage of a skill"PureDamage: puredamagePureDamage := puredamage .! !!Skill methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/28/2017 22:37'!Active: typeType := type! !!Skill methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/28/2017 22:37'!isActive^Type! !!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:04'!"Returns the cool down number of a skill"getCooldown^Cooldown ! !!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:05'!"Sets the cooldown number of a skill"setCooldown: cdCooldown := cd! !!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:06'!"Sets the mana usage of a skill"setManaUsage: manausgManaUsage := manausg ! !!Skill methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 22:05'!"Returns the damage of a skill"getPureDamage^PureDamage! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Skill class	instanceVariableNames: ''!!Skill class methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/28/2017 22:34'!new^self subclassResponsibility! !Skill subclass: #AnchorSmash	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AnchorSmash class	instanceVariableNames: ''!!AnchorSmash class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:49'!new|tempObject|tempObject := self basicNew.tempObject PureDamage:0.tempObject Active:0.tempObject setCooldown: 3.tempObject setManaUsage: 60.tempObject setName: 'Anchor Smash'.^tempObject.! !Skill subclass: #Blur	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Blur class	instanceVariableNames: ''!!Blur class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 20:45'!new|tempObject|tempObject := self basicNew.tempObject PureDamage:0.tempObject Active:0.tempObject setName: 'Blur'.tempObject setManaUsage: 0.^tempObject.! !Skill subclass: #CoupdeGrace	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CoupdeGrace class	instanceVariableNames: ''!!CoupdeGrace class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 20:45'!new|tempObject|tempObject := self basicNew.tempObject PureDamage:0.tempObject Active:0.tempObject setName: 'Coup de Grace'.tempObject setManaUsage: 0.^tempObject.! !Skill subclass: #EarthSpike	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EarthSpike class	instanceVariableNames: ''!!EarthSpike class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:50'!new|tempObject|tempObject := self basicNew.tempObject PureDamage:260.tempObject Active:1.tempObject setCooldown: 5.tempObject setManaUsage: 160.tempObject setName: 'Earth Spike'.^tempObject.! !Skill subclass: #EnchantTotem	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EnchantTotem class	instanceVariableNames: ''!!EnchantTotem class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:50'!new|tempObject|tempObject := self basicNew.tempObject PureDamage:0.tempObject Active:1.tempObject setCooldown: 5.tempObject setManaUsage: 50.tempObject setName: 'Enchant Totem'.^tempObject.! !Skill subclass: #FingerofDeath	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FingerofDeath class	instanceVariableNames: ''!!FingerofDeath class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:50'!new|tempObject|tempObject := self basicNew.tempObject PureDamage:850.tempObject Active:1.tempObject setCooldown: 8.tempObject setManaUsage: 650.tempObject setName: 'Finger of Death'.^tempObject.! !Skill subclass: #Fireblast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fireblast class	instanceVariableNames: ''!!Fireblast class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:51'!new|tempObject|tempObject := self basicNew.tempObject PureDamage:220.tempObject Active:1.tempObject setCooldown: 5.tempObject setManaUsage: 225.tempObject setName: 'Fire Blast'.^tempObject.! !Skill subclass: #Fissure	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fissure class	instanceVariableNames: ''!!Fissure class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:51'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:260.tempObject setCooldown: 5.tempObject setManaUsage: 170.tempObject setName: 'Fissure'.^tempObject.! !Skill subclass: #FreezingField	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FreezingField class	instanceVariableNames: ''!!FreezingField class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:51'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:800.tempObject setCooldown: 8.tempObject setManaUsage: 600.tempObject setName: 'Freezing Field'.^tempObject.! !Skill subclass: #FrostBite	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FrostBite class	instanceVariableNames: ''!!FrostBite class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:51'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:300.tempObject setCooldown: 5.tempObject setManaUsage: 150.tempObject setName: 'Frost Bite'.^tempObject.! !Skill subclass: #GodsStrength	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GodsStrength class	instanceVariableNames: ''!!GodsStrength class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:52'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:0.tempObject setCooldown: 5.tempObject setManaUsage: 200.tempObject setName: 'Gods Strength'.^tempObject.! !Skill subclass: #Impale	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Impale class	instanceVariableNames: ''!!Impale class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:52'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:260.tempObject setCooldown: 5.tempObject setManaUsage: 225.tempObject setName: 'Impale'.^tempObject.! !Skill subclass: #ManaBreak	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaBreak class	instanceVariableNames: ''!!ManaBreak class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 20:46'!new|tempObject|tempObject := self basicNew.tempObject Active:0.tempObject PureDamage:0.tempObject setName: 'Mana Break'.tempObject setManaUsage: 0.^tempObject.! !Skill subclass: #ManaBurn	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaBurn class	instanceVariableNames: ''!!ManaBurn class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 20:50'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:0.tempObject setCooldown: 5.tempObject setManaUsage: 50.tempObject setName: 'Mana Burn'.^tempObject.! !Skill subclass: #ManaVoid	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaVoid class	instanceVariableNames: ''!!ManaVoid class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:53'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:0.tempObject setCooldown: 7.tempObject setManaUsage: 275.tempObject setName: 'Mana Void'.^tempObject.! !Skill subclass: #Multicast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Multicast class	instanceVariableNames: ''!!Multicast class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 20:46'!new|tempObject|tempObject := self basicNew.tempObject Active:0.tempObject PureDamage:0.tempObject setName: 'Multicast'.tempObject setManaUsage: 0.^tempObject.! !Skill subclass: #PulseNova	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PulseNova class	instanceVariableNames: ''!!PulseNova class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:53'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:0.tempObject setManaUsage: 150.tempObject setName: 'Pulse Nova'.^tempObject.! !Skill subclass: #Ravage	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ravage class	instanceVariableNames: ''!!Ravage class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:53'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:380.tempObject setCooldown: 10.tempObject setManaUsage: 325.tempObject setName: 'Ravage'.^tempObject.! !Skill subclass: #SacredArrow	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SacredArrow class	instanceVariableNames: ''!!SacredArrow class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:53'!new|tempObject rand|rand := Random new.rand := rand next.tempObject := self basicNew.tempObject Active:1.(rand>0.75)ifTrue: [tempObject PureDamage:0.]ifFalse: [ tempObject PureDamage:320 ].tempObject setCooldown: 4.tempObject setManaUsage: 100.tempObject setName: 'Sacred Arrow'.^tempObject.! !Skill subclass: #SplitEarth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SplitEarth class	instanceVariableNames: ''!!SplitEarth class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:54'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:300.tempObject setCooldown: 5.tempObject setManaUsage: 160.tempObject setName: 'Split Earth'.^tempObject.! !Skill subclass: #Starstorm	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Starstorm class	instanceVariableNames: ''!!Starstorm class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:54'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:300.tempObject setCooldown: 4.tempObject setManaUsage: 160.tempObject setName: 'Starstorm'.^tempObject.! !Skill subclass: #StormHammer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!StormHammer class	instanceVariableNames: ''!!StormHammer class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:54'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:325.tempObject setCooldown: 5.tempObject setManaUsage: 140.tempObject setName: 'Storm Hammer'.^tempObject.! !Sentinel subclass: #Sven	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sven class	instanceVariableNames: ''!!Sven class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:01'!new|tempObject|tempObject := self basicNew.tempObject setHp: 2198.tempObject setMaxHp: 2198.tempObject setMana: 874.tempObject setMaxMana: 874.tempObject setSkill1: StormHammer new.tempObject setSkill2: GodsStrength new.tempObject setArmor: 14.tempObject setDamage: 149 to: 151. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Sven'.^tempObject ! !Scourge subclass: #Tidehunter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tidehunter class	instanceVariableNames: ''!!Tidehunter class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 16:00'!new|tempObject|tempObject := self basicNew.tempObject setHp: 2316.tempObject setMaxHp: 2316.tempObject setMana: 998.tempObject setMaxMana: 998.tempObject setSkill1: AnchorSmash new.tempObject setSkill2: Ravage new.tempObject setArmor: 11.tempObject setDamage: 139 to: 145. tempObject setGold: 11000.tempObject createInitialItemList.tempObject createInitialActionList .tempObject setName: 'Tidehunter'.^tempObject ! !Skill subclass: #VampiricAura	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VampiricAura class	instanceVariableNames: ''!!VampiricAura class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 20:47'!new|tempObject|tempObject := self basicNew.tempObject Active:0.tempObject PureDamage:0.tempObject setName: 'Vampiric Aura'.tempObject setManaUsage: 0.^tempObject.! !Item subclass: #Vanguard	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Vanguard class	instanceVariableNames: ''!!Vanguard class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:01'!new|tempObject|tempObject := self basicNew.tempObject setCost:2500.tempObject setName: 'Vanguard'.^tempObject.! !Item subclass: #VitalyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VitalyBooster class	instanceVariableNames: ''!!VitalyBooster class methodsFor: 'as yet unclassified' stamp: 'alim 5/20/2017 15:01'!new|tempObject|tempObject := self basicNew.tempObject setCost:1200.tempObject setName: 'Vitaly Booster'.^tempObject.! !Skill subclass: #WraithfireBlast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400165'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WraithfireBlast class	instanceVariableNames: ''!!WraithfireBlast class methodsFor: 'as yet unclassified' stamp: 'alim 5/19/2017 22:55'!new|tempObject|tempObject := self basicNew.tempObject Active:1.tempObject PureDamage:300.tempObject setCooldown: 5.tempObject setManaUsage: 140.tempObject setName: 'Wraithfire Blast'.^tempObject.! !